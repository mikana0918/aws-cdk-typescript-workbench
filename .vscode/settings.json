{
  // editor's default tab size
  "editor.tabSize": 2,
  // eslint's validation target programming langs / libs
  "eslint.validate": [
    "javascript",
    "typescript",
    "vue"
  ],
  // auto format on saveï¼ˆcmd + S)
  "editor.codeActionsOnSave": {
    // auto format files supported by ESLint on save
    "source.fixAll.eslint": true,
  },
  // Exclude files from VScode Explorer
  "files.exclude": {
    "**/.git": true,
    "**/.DS_Store": true,
    "**/package-lock.json": false,
    "**/yarn.lock": false,
    "**/node_modules": true,
    "**/node_modules/": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true,
    "**/coverage": true
  },
  // files that do not watch by VSCode (for editor performance)
  "files.watcherExclude": {
    "**/.dist/**": true,
    "**/node_modules/**": true,
    "**/package-lock.json": true,
    "**/snapshot/output/**": true
  },

  // It's a common way to use vetur for Vue.js development.
  // However, vetur can not properly check vue files in current(at: June 16, 2021) project.
  // Thus, it'd be better to ignore vetur even if a developer has his/her own vetur configurations.

  // code format by vetur
  "vetur.format.enable": false,
  // template props validation by vetur
  "vetur.validation.templateProps": false,
  // vue template type check / autocomplete / definition jump
  "vetur.experimental.templateInterpolationService": false,

  // update imports when move file directory
  "typescript.updateImportsOnFileMove.enabled": "always",

  // definition jump target files by vue-peek
  "vue-peek.targetFileExtensions": [
    ".vue",
    ".ts"
  ],
  "vue-peek.supportedLanguages": [
    "vue",
    ".ts"
  ],

  // associate .tsx file with .ts for vscode because vscode see to .tsx as react tsx as default behavior.
  "files.associations": {
    "*.tsx": "typescript"
  },
}